
connect to mysql in command line:
=================================
mysql -u username -p

commands for databases
======================
show databases;

show schemas;

create database YourDatabaseName;

drop database YourDatabaseName;

use YourDatabaseName;

select database();
//show database in use

//show available charset
show character set;

//change character set of database
ALTER DATABASE project2 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;

//set charset and collation
https://mariadb.com/kb/en/setting-character-sets-and-collations/

//to get help
\help

//to get server status
\s



commands for tables
===================
show tables;

create table actors ( ActorID int not null auto_increment,
                      first_name varchar(100),
                      last_name varchar(150),
                      primary key (ActorID)
                     );

create table movies ( MovieID int not null auto_increment,
                      title varchar(100),
                      release_year date,
                      rating int,
                      primary key (MovieID)
                     );

drop table YourTableName;

show columns in YourTableName;

alter table YourTableName add column column_name columns_type NULL;

alter table YourTableName drop column column_name;

//change character set of tables
ALTER TABLE tablename CHARACTER SET utf8 COLLATE utf8_general_ci;

// Single insert
insert into actors (first_name, last_name) values ('gholam' , 'gholaydoon');

// Multiple inserts
insert into actors (first_name, last_name)  values
                    ('Taylor', 'swift'),
                    ('Michael', 'jordan'),
                    ('gordon' , 'james'),
                    ('jesika' , 'gholami');
                    ('اکبر' , 'محمدی');
// show all of rows in a table
select * from actors;

// change field name or its type
ALTER TABLE student_info CHANGE roll_no roll_no VARCHAR(255);
ALTER TABLE student_info MODIFY roll_no VARCHAR(255);
ALTER TABLE student_info CHANGE roll_no identity_no VARCHAR(255);

// modify collection type
alter table actors modify column first_name varchar(120) COLLATE  utf8mb4_general_ci

// retrieve data from database
select title, (another field name) from movies;
select release_year as RY from movies;

// concatenation
select concat (last_name, ', ', first_name) as full_family from actors;

//substring
select concat(substring(first_name,1,1), '.', last_name) as name from actors;

select concat (last_name, ', ', first_name) as "Actor's names" from actors;

//limit
select * from YourTableName limit 4;

//order by based on second column values
select * from YourTableName order by 2;

select * from YourTableName order by FieldName;

//Combination of order by & limit
select * from YourTableName order by 2 limit 4; (with ASC & DESC)

//Order by multiple column
SELECT * FROM actors ORDER BY last_name ASC, first_name DESC;

//distinct
SELECT DISTINCT first_name FROM actors;

//count
SELECT COUNT(*) as "Movies count" FROM movies;

//group by
SELECT rating, COUNT(*) as movies FROM movies GROUP BY rating

//like
SELECT * FROM `movies` WHERE title LIKE '%film%' ;

SELECT COUNT(*) as film_movie FROM movies WHERE title LIKE '%film%';

//min & max
SELECT MAX(release_year) FROM movies;
SELECT title, MIN(release_year), rating FROM movies;
SELECT title, MAX(release_year), rating FROM movies GROUP BY title, rating;
SELECT MIN(release_year), rating FROM movies GROUP BY rating


//sample of a little longer queries in tables
SELECT CONCAT (first_name, ' ', last_name), SUM(game_score) as total , SUM(game_score)/count(*)
as average from laylay_game_result GROUP BY first_name, last_name ORDER BY average DESC limit 3;

SELECT CONCAT (first_name, ' ', last_name) as player_name , MAX(game_score) as best_score
FROM laylay_game_result GROUP by first_name, last_name ORDER by best_score DESC;

SELECT DISTINCT first_name, last_name FROM laylay_game_result;

//condition
SELECT * FROM `movies` WHERE rating='PG' AND title LIKE "%film%";
SELECT * FROM `movies` WHERE rating='PG' AND title NOT LIKE "%film%";
SELECT title, release_year FROM movies WHERE release_year >=2012;
SELECT title, release_year FROM movies WHERE release_year >=2013 ;

SELECT title, release_year FROM movies WHERE release_year >=2013 AND release_year<=2019;
SELECT title, release_year FROM movies WHERE release_year BETWEEN 2013 and 2019
SELECT title, release_year FROM movies WHERE release_year BETWEEN 2005 and 2020 and release_year <> 2019 AND release_year<> 2013;

//exclude and include
SELECT title, release_year FROM movies WHERE release_year IN (2013,2020,2019);
SELECT title, release_year FROM movies WHERE release_year NOT IN (2013,2020,2019);

// to execute sql file
source test1.sql



Some tips about GLOBAL and SESSION variables
=========================================
https://fromdual.com/mariadb-and-mysql-character-set-conversion
https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_character_set_connection
https://mariadb.com/kb/en/mysql-command-line-client/
https://mariadb.com/kb/en/server-system-variables/
https://mariadb.com/kb/en/show-variables/
https://mariadb.com/kb/en/setting-character-sets-and-collations/
https://mariadb.com/kb/en/mysql-client-utility-character-set/
https://stackoverflow.com/questions/6787824/mysql-command-line-formatting-with-utf8
http://localhost/phpmyadmin/server_variables.php

